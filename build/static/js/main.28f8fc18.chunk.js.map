{"version":3,"sources":["components/AddContact/styles.module.scss","components/Contacts/styles.module.scss","redux/actions.js","redux/contacts/contacts-operations.js","components/AddContact/AddContact.jsx","redux/contacts/contacts-selectors.js","components/Contacts/FindContacts.jsx","components/Contacts/ContactsList.jsx","components/Contacts/Contacts.jsx","App.js","redux/store.js","index.js"],"names":["module","exports","getContactsRequest","createAction","getContactsSuccess","getContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContact","axios","defaults","baseURL","AddContact","state","name","number","handleChange","target","value","setState","handleSubmit","event","preventDefault","props","onSubmit","reset","className","styles","form","this","label","type","placeholder","pattern","title","required","onChange","input","button","Component","connect","dispatch","data","contact","post","then","catch","err","addContact","getFilter","contacts","filter","getContacts","items","getLoading","loading","getVisibleContacts","createSelector","normalizeFilter","toLowerCase","includes","FindContacts","onInput","autoComplete","contactsSelectors","ContactsList","onDelete","map","id","onClick","delete","deleteContact","get","Contacts","App","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","createReducer","_","payload","contactsReducer","combineReducers","rootReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28f8fc18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__szG5I\",\"label\":\"styles_label__1hR8g\",\"button\":\"styles_button__2mdVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__nGfjw\",\"contacts\":\"styles_contacts__2S-uj\",\"contact\":\"styles_contact__bLBpt\",\"button\":\"styles_button__37uoh\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const getContactsRequest = createAction('contacts/getRequest');\r\nexport const getContactsSuccess = createAction('contacts/getSuccess');\r\nexport const getContactsError = createAction('contacts/getError');\r\n\r\nexport const addContactRequest = createAction('contacts/addRequest');\r\nexport const addContactSuccess = createAction('contacts/addSuccess');\r\nexport const addContactError = createAction('contacts/addError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteError');\r\n\r\nexport const filterContact = createAction('contacts/filter');\r\n","import axios from 'axios';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from '../actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000/';\r\n\r\nexport const getContacts = () => dispatch => {\r\n  dispatch(getContactsRequest());\r\n\r\n  return axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(getContactsSuccess(data)))\r\n    .catch(err => dispatch(getContactsError(err)));\r\n};\r\n\r\nexport const addContact = ({ name, number }) => dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(err => dispatch(addContactError(err)));\r\n};\r\n\r\nexport const deleteContact = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(err => dispatch(deleteContactError(err)));\r\n};\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={styles.form} onSubmit={this.handleSubmit}>\r\n        <label className={styles.label}>\r\n          <span>Name</span>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            placeholder=\"John Doe\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label className={styles.label}>\r\n          <span>Number</span>\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            placeholder=\"+38...\"\r\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button className={styles.button} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onSubmit: data => dispatch(addContact(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(AddContact);\r\n","import { createSelector } from '@reduxjs/toolkit';\r\nimport { getContactsError } from '../actions';\r\n\r\nconst getFilter = state => state.contacts.filter;\r\nconst getContacts = state => state.contacts.items;\r\nconst getLoading = state => state.contacts.loading;\r\n\r\n// const getVisibleContacts = state => {\r\n//   const filter = getFilter(state);\r\n//   const contacts = getContacts(state);\r\n//   const normalizeFilter = filter.toLowerCase();\r\n\r\n//   return contacts.filter(\r\n//     ({ name, number }) =>\r\n//       name.toLowerCase().includes(normalizeFilter) ||\r\n//       number.includes(contacts.filter),\r\n//   );\r\n// };\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getFilter, getContacts],\r\n  (filter, contacts) => {\r\n    const normalizeFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(\r\n      ({ name, number }) =>\r\n        name.toLowerCase().includes(normalizeFilter) ||\r\n        number.includes(contacts.filter),\r\n    );\r\n  },\r\n);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default {\r\n  getFilter,\r\n  getContacts,\r\n  getLoading,\r\n  getVisibleContacts,\r\n};\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport { filterContact } from '../../redux/actions';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nexport class FindContacts extends Component {\r\n  render() {\r\n    const { value, onChange } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <h3>Find contacts by name</h3>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          value={value}\r\n          required\r\n          onInput={onChange}\r\n          className={styles.input}\r\n          autoComplete=\"off\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  value: contactsSelectors.getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChange: ({ target }) => dispatch(filterContact(target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FindContacts);\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styles from './styles.module.scss';\r\nimport {\r\n  getContacts,\r\n  deleteContact,\r\n} from '../../redux/contacts/contacts-operations';\r\nimport contactsSelectors from '../../redux/contacts/contacts-selectors';\r\n\r\nexport class ContactsList extends Component {\r\n  componentDidMount() {\r\n    this.props.getContacts();\r\n  }\r\n\r\n  render() {\r\n    const { contacts, onDelete } = this.props;\r\n\r\n    return (\r\n      <ul className={styles.contacts}>\r\n        {contacts.map(({ id, name, number }) => {\r\n          return (\r\n            <li key={id} className={styles.contact}>\r\n              <span>{name}</span>\r\n              <span>{number}</span>\r\n              <button className={styles.button} onClick={() => onDelete(id)}>\r\n                X\r\n              </button>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: contactsSelectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onDelete: id => dispatch(deleteContact(id)),\r\n  getContacts: () => dispatch(getContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsList);\r\n","import { Component } from 'react';\r\nimport FindContacts from './FindContacts';\r\nimport ContactsList from './ContactsList';\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h2>Contacts</h2>\r\n        <FindContacts />\r\n        <ContactsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import { Component } from 'react';\r\nimport AddContact from './components/AddContact';\r\nimport Contacts from './components/Contacts';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <div className=\"container\">\r\n        <AddContact />\r\n        <Contacts />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  configureStore,\r\n  createReducer,\r\n  combineReducers,\r\n  getDefaultMiddleware,\r\n} from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport {\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContact,\r\n} from './actions';\r\n\r\n// const persistConfig = {\r\n//   key: 'phonebook',\r\n//   storage,\r\n// };\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n];\r\n\r\nconst items = createReducer([], {\r\n  [getContactsSuccess]: (_, { payload }) => [...payload],\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContact]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [getContactsRequest]: () => true,\r\n  [getContactsSuccess]: () => false,\r\n  [getContactsError]: () => false,\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst contactsReducer = combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n});\r\n\r\nconst rootReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n});\r\n\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: middleware,\r\n  // devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}